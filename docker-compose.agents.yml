version: '3.8'

services:
  # Background agents container
  agents:
    build:
      context: .
      dockerfile: Dockerfile.agents
    container_name: opportunity-radar-agents
    restart: unless-stopped
    environment:
      # Supabase connection
      SUPABASE_URL: ${SUPABASE_URL:-http://supabase-kong:8000}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      DATABASE_URL: postgresql://postgres:postgres@supabase-db:5432/postgres
      DIRECT_URL: postgresql://postgres:postgres@supabase-db:5432/postgres
      SUPABASE_DB_HOST: supabase-db
      SUPABASE_DB_PORT: 5432
      
      # Application settings
      NODE_ENV: ${NODE_ENV:-development}
      
      # AI/ML API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
      VOYAGE_API_KEY: ${VOYAGE_API_KEY}
      
      # External services
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      
      # Feature flags
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL:-http://localhost:54321}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    
    volumes:
      # Mount source code for development
      - ./:/app:cached
      - /app/node_modules
      - /app/.next
      
      # Persist logs and data
      - agent-logs:/app/logs
      - agent-data:/app/data
      
      # Mount your actual dotfiles if you have them
      # - ~/.tmux.conf:/home/agent/.tmux.conf:ro
      # - ~/.vimrc:/home/agent/.vimrc:ro
      # - ~/.vim:/home/agent/.vim:ro
      # - ~/.config/nvim:/home/agent/.config/nvim:ro
    
    networks:
      - supabase-network
      - default
    
    depends_on:
      - supabase-db
      - supabase-kong
    
    # Development overrides
    command: ["tmux", "new-session", "-d", "-s", "agents", "&&", "supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
    
    # Port mappings for debugging
    ports:
      - "9229:9229"  # Node.js debugging
      - "9230:9230"  # Additional debugging ports
      - "9231:9231"
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Supabase services (minimal for agent connectivity)
  supabase-db:
    image: supabase/postgres:15.1.1.78
    container_name: supabase-db-agents
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
    networks:
      - supabase-network
    ports:
      - "54322:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  supabase-kong:
    image: kong:2.8.1
    container_name: supabase-kong-agents
    restart: unless-stopped
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: cors,key-auth,acl,basic-auth,request-transformer
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro
    networks:
      - supabase-network
    ports:
      - "8000:8000"
      - "8443:8443"
    depends_on:
      - supabase-db

volumes:
  agent-logs:
    driver: local
  agent-data:
    driver: local
  supabase-db-data:
    driver: local

networks:
  supabase-network:
    external: true
    name: supabase_default
  default:
    driver: bridge 