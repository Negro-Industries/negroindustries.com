#!/bin/bash

# Supabase CLI authentication setup for Cursor Background Agents
set -e

echo "Setting up Supabase CLI authentication..."

# Check if we're in a container environment without Docker
DOCKER_AVAILABLE=true
if ! docker info >/dev/null 2>&1; then
    DOCKER_AVAILABLE=false
    echo "Docker daemon not available - configuring for remote-only Supabase usage"
fi

# Check if SUPABASE_ACCESS_TOKEN is set
if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
    echo "Warning: SUPABASE_ACCESS_TOKEN is not set"
    echo "Supabase CLI commands may require manual authentication"
    echo "Set this in Cursor's background agent environment variables"
else
    # Create Supabase config directory if it doesn't exist
    mkdir -p ~/.supabase

    # Write the access token to the config file
    cat > ~/.supabase/config.toml << EOF
[auth]
access_token = "$SUPABASE_ACCESS_TOKEN"
EOF

    echo "Supabase CLI authentication configured"
fi

# Link to the main development project if not already linked
if [ ! -f "supabase/.temp/project-ref" ]; then
    if [ -n "$SUPABASE_ACCESS_TOKEN" ]; then
        echo "Linking to main development project..."
        supabase link --project-ref obedkaipazzeixlwhqni --no-password || true
        echo "Project linking attempted"
    else
        echo "Skipping project linking - no access token available"
    fi
else
    echo "Project already linked"
fi

# Create .env.local from environment variables if it doesn't exist
if [ ! -f ".env.local" ]; then
    echo "Creating .env.local from environment variables..."
    cat > .env.local << EOF
# Generated by supabase-setup.sh
NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL
NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY
SUPABASE_SERVICE_ROLE_KEY=$SUPABASE_SERVICE_ROLE_KEY
DATABASE_URL=$DATABASE_URL
DIRECT_URL=$DIRECT_URL

# Additional environment variables
OPENAI_API_KEY=$OPENAI_API_KEY
ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY
GROQ_API_KEY=$GROQ_API_KEY
MISTRAL_API_KEY=$MISTRAL_API_KEY
VOYAGE_API_KEY=$VOYAGE_API_KEY
SENDGRID_API_KEY=$SENDGRID_API_KEY
STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY
STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET
EOF
    echo ".env.local created"
else
    echo ".env.local already exists"
fi

# Add helpful commands for container environments
if [ "$DOCKER_AVAILABLE" = false ]; then
    echo ""
    echo "=== Container Environment Detected ==="
    echo "Docker is not available in this environment."
    echo ""
    echo "Available Supabase commands for remote project:"
    echo "  supabase projects list                    # List your projects"
    echo "  supabase db remote get                    # Get remote DB info"
    echo "  supabase gen types typescript --linked    # Generate TypeScript types"
    echo "  supabase migration list --linked          # List migrations"
    echo "  supabase migration new <name>             # Create new migration"
    echo "  supabase db push --linked                 # Push migrations to remote"
    echo ""
    echo "Note: 'supabase status' won't work without Docker."
    echo "Use 'supabase projects list' to check project status instead."
fi

echo "Supabase setup complete!"
